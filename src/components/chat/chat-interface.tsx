import React, { useState } from 'react';
import { Send } from 'lucide-react';
import { useChatStore } from '../../store/chat';
import { Button } from '../ui/button';

export function ChatInterface() {
  const [input, setInput] = useState('');
  const { activeChat, addMessage, createNewChat } = useChatStore();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim()) return;

    if (!activeChat) {
      createNewChat();
    }

    const message = {
      id: Date.now().toString(),
      content: input,
      role: 'user' as const,
      timestamp: new Date(),
    };

    addMessage(activeChat?.id || '', message);
    setInput('');

    // Simulate AI response
    setTimeout(() => {
      const aiResponse = {
        id: (Date.now() + 1).toString(),
        content: 'This is a simulated AI response. In a real application, this would be generated by the Perplexity API.',
        role: 'assistant' as const,
        timestamp: new Date(),
      };
      addMessage(activeChat?.id || '', aiResponse);
    }, 1000);
  };

  return (
    <div className="flex flex-col h-[600px] bg-white rounded-lg border">
      <div className="flex-1 overflow-y-auto p-4 space-y-4">
        {activeChat?.messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${
              message.role === 'user' ? 'justify-end' : 'justify-start'
            }`}
          >
            <div
              className={`max-w-[80%] rounded-lg p-3 ${
                message.role === 'user'
                  ? 'bg-blue-500 text-white'
                  : 'bg-gray-100 text-gray-900'
              }`}
            >
              <p className="text-sm">{message.content}</p>
              <span className="text-xs opacity-75 mt-1 block">
                {new Date(message.timestamp).toLocaleTimeString()}
              </span>
            </div>
          </div>
        ))}
      </div>

      <form onSubmit={handleSubmit} className="border-t p-4">
        <div className="flex space-x-2">
          <input
            type="text"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            placeholder="Ask a question about your documents..."
            className="flex-1 rounded-md border border-gray-300 px-4 py-2 focus:border-blue-500 focus:ring-blue-500"
          />
          <Button type="submit">
            <Send className="h-4 w-4" />
          </Button>
        </div>
      </form>
    </div>
  );
}